apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: incident-bot
  name: incident-bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: incident-bot
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: incident-bot
    spec:
      containers:
        - name: incident-bot
          image: us-docker.pkg.dev/brightside-prod/gcp-prod-slackbots-docker/incident-bot:latest
          imagePullPolicy: Always
          command: ['python3']
          args: ['main.py']
          envFrom:
            - secretRef:
                name: incident-bot
          ports:
            - name: api
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512M
            requests:
              cpu: 250m
              memory: 256M
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.1 # make sure the use the latest version
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            # By default, the proxy will write all logs to stderr. In some
            # environments, anything printed to stderr is consider an error. To
            # disable this behavior and write all logs to stdout (except errors
            # which will still go to stderr), use:
            - "-log_debug_stdout"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=brightside-prod:us-central1:slackbots-pg-prod=tcp:5432"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "1Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu:    250m
      serviceAccountName: incident-bot-prod
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
